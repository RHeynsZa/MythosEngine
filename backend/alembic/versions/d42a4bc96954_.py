"""empty message

Revision ID: d42a4bc96954
Revises: 
Create Date: 2025-09-05 20:40:52.721450

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd42a4bc96954'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_table('images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('original_filename', sa.String(), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(), nullable=False),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('alt_text', sa.Text(), nullable=True),
    sa.Column('is_s3_stored', sa.Boolean(), nullable=True),
    sa.Column('s3_bucket', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_images_filename'), 'images', ['filename'], unique=False)
    op.create_index(op.f('ix_images_id'), 'images', ['id'], unique=False)
    op.create_index(op.f('ix_images_project_id'), 'images', ['project_id'], unique=False)
    op.create_table('articles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('article_type', sa.String(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('header_image_id', sa.Integer(), nullable=True),
    sa.Column('spotify_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['header_image_id'], ['images.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_articles_article_type'), 'articles', ['article_type'], unique=False)
    op.create_index(op.f('ix_articles_id'), 'articles', ['id'], unique=False)
    op.create_index(op.f('ix_articles_title'), 'articles', ['title'], unique=False)
    op.create_table('persons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('article_id', sa.Integer(), nullable=False),
    sa.Column('person_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('race', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('life_status', sa.String(), nullable=True),
    sa.Column('occupation', sa.String(), nullable=True),
    sa.Column('current_location', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('article_id')
    )
    op.create_index(op.f('ix_persons_current_location'), 'persons', ['current_location'], unique=False)
    op.create_index(op.f('ix_persons_gender'), 'persons', ['gender'], unique=False)
    op.create_index(op.f('ix_persons_id'), 'persons', ['id'], unique=False)
    op.create_index(op.f('ix_persons_life_status'), 'persons', ['life_status'], unique=False)
    op.create_index(op.f('ix_persons_occupation'), 'persons', ['occupation'], unique=False)
    op.create_index(op.f('ix_persons_race'), 'persons', ['race'], unique=False)
    op.create_table('settlements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('article_id', sa.Integer(), nullable=False),
    sa.Column('settlement_data', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('settlement_type', sa.String(), nullable=False),
    sa.Column('population', sa.Integer(), nullable=True),
    sa.Column('government_type', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('primary_industry', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('article_id')
    )
    op.create_index(op.f('ix_settlements_government_type'), 'settlements', ['government_type'], unique=False)
    op.create_index(op.f('ix_settlements_id'), 'settlements', ['id'], unique=False)
    op.create_index(op.f('ix_settlements_population'), 'settlements', ['population'], unique=False)
    op.create_index(op.f('ix_settlements_primary_industry'), 'settlements', ['primary_industry'], unique=False)
    op.create_index(op.f('ix_settlements_region'), 'settlements', ['region'], unique=False)
    op.create_index(op.f('ix_settlements_settlement_type'), 'settlements', ['settlement_type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_settlements_settlement_type'), table_name='settlements')
    op.drop_index(op.f('ix_settlements_region'), table_name='settlements')
    op.drop_index(op.f('ix_settlements_primary_industry'), table_name='settlements')
    op.drop_index(op.f('ix_settlements_population'), table_name='settlements')
    op.drop_index(op.f('ix_settlements_id'), table_name='settlements')
    op.drop_index(op.f('ix_settlements_government_type'), table_name='settlements')
    op.drop_table('settlements')
    op.drop_index(op.f('ix_persons_race'), table_name='persons')
    op.drop_index(op.f('ix_persons_occupation'), table_name='persons')
    op.drop_index(op.f('ix_persons_life_status'), table_name='persons')
    op.drop_index(op.f('ix_persons_id'), table_name='persons')
    op.drop_index(op.f('ix_persons_gender'), table_name='persons')
    op.drop_index(op.f('ix_persons_current_location'), table_name='persons')
    op.drop_table('persons')
    op.drop_index(op.f('ix_articles_title'), table_name='articles')
    op.drop_index(op.f('ix_articles_id'), table_name='articles')
    op.drop_index(op.f('ix_articles_article_type'), table_name='articles')
    op.drop_table('articles')
    op.drop_index(op.f('ix_images_project_id'), table_name='images')
    op.drop_index(op.f('ix_images_id'), table_name='images')
    op.drop_index(op.f('ix_images_filename'), table_name='images')
    op.drop_table('images')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_table('projects')
    # ### end Alembic commands ###
